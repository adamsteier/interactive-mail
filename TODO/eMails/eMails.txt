# PostTimely Email System Overview

## Brand Guidelines
- Primary: Electric Teal (#00F0FF)
- Secondary: Neon Magenta (#FF00B8) 
- Background: Dark Charcoal (#1A1A1A)
- Text: Light Gray (#EAEAEA)

## Email Categories

### ðŸ”” ADMIN NOTIFICATIONS (to: adam@posttimely.com)

#### 1. Campaign Failed Alert
- **File**: `src/emails/admin/campaign-failed.html`
- **Trigger**: Campaign processing fails
- **Priority**: URGENT
- **Data**: campaignId, userEmail, error, leadCount, amount
- **Action**: Admin needs to fix and retry

#### 2. Refund Request Alert  
- **File**: `src/emails/admin/refund-request.html`
- **Trigger**: Campaign needs leads removed (bad addresses, etc.)
- **Priority**: HIGH
- **Data**: campaignId, userEmail, originalAmount, refundAmount, reason, removedLeads
- **Action**: Admin approves refund in Stripe

#### 3. Campaign Stuck Alert
- **File**: `src/emails/admin/campaign-stuck.html`
- **Trigger**: Campaign in processing >30 minutes
- **Priority**: MEDIUM
- **Data**: campaignId, userEmail, status, stuckDuration
- **Action**: Admin investigates and retries

#### 4. High Geocoding Failure Alert
- **File**: `src/emails/admin/geocoding-failures.html`
- **Trigger**: >20% of leads fail address validation
- **Priority**: MEDIUM  
- **Data**: campaignId, userEmail, failedCount, totalCount, failureReasons
- **Action**: Admin reviews addresses

#### 5. Payment Processing Issue
- **File**: `src/emails/admin/payment-issue.html`
- **Trigger**: Stripe webhook failures or payment inconsistencies
- **Priority**: HIGH
- **Data**: campaignId, userEmail, paymentIntentId, issue
- **Action**: Admin checks Stripe dashboard

### ðŸ‘¤ CUSTOMER NOTIFICATIONS (to: user email)

#### 6. Payment Confirmation
- **File**: `src/emails/customer/payment-confirmation.html`
- **Trigger**: Successful payment
- **Priority**: NORMAL
- **Data**: campaignId, amount, leadCount, scheduledSendDate, estimatedDelivery
- **Action**: None (confirmation)

#### 7. Campaign Approved & Sent
- **File**: `src/emails/customer/campaign-sent.html`
- **Trigger**: Postcards sent to print/mail
- **Priority**: NORMAL
- **Data**: campaignId, leadCount, actualSendDate, estimatedDelivery, trackingInfo
- **Action**: None (confirmation)

#### 8. Design Generation Complete
- **File**: `src/emails/customer/designs-ready.html`
- **Trigger**: AI generation complete, needs user A/B selection
- **Priority**: NORMAL
- **Data**: campaignId, designCount, reviewUrl
- **Action**: User reviews and selects designs

#### 9. Campaign Delayed
- **File**: `src/emails/customer/campaign-delayed.html`
- **Trigger**: Issues found, send date pushed back
- **Priority**: NORMAL
- **Data**: campaignId, originalDate, newDate, reason, compensationOffered
- **Action**: Customer informed of delay

#### 10. Partial Refund Processed
- **File**: `src/emails/customer/partial-refund.html`
- **Trigger**: Leads removed, refund issued
- **Priority**: NORMAL
- **Data**: campaignId, removedLeads, refundAmount, reason, remainingLeads
- **Action**: None (confirmation)

#### 11. Campaign Delivery Complete
- **File**: `src/emails/customer/delivery-complete.html`
- **Trigger**: All postcards delivered (or attempt period ended)
- **Priority**: LOW
- **Data**: campaignId, deliveredCount, totalCount, deliveryStats, responseTracking
- **Action**: Optional feedback survey

### ðŸš¨ ERROR NOTIFICATIONS (both admin and customer)

#### 12. Critical System Error
- **File**: `src/emails/system/critical-error.html`
- **Trigger**: Database, API, or infrastructure failures
- **Priority**: CRITICAL
- **Data**: errorType, errorMessage, affectedCampaigns, timestamp
- **Action**: Immediate investigation

## Integration Points

### Triggered From:
- `campaignProcessingService.ts` - Failed campaigns, processing complete
- `checkout/page.tsx` - Payment confirmation
- `aiDesignService.ts` - Design generation complete  
- `stannpService.ts` - Delivery updates via webhooks
- `refundService.ts` - Refund processing
- Cloud Functions - System monitoring

### Email Service Implementation:
- **Provider**: SendGrid API
- **Environment**: SENDGRID_API_KEY
- **From Address**: noreply@posttimely.com
- **Templates**: HTML with fallback text
- **Tracking**: Open rates, click tracking enabled
- **Queue**: Firestore collection for retry logic

## Template Structure
```
src/emails/
â”œâ”€â”€ templates/
â”‚   â”œâ”€â”€ admin/
â”‚   â”‚   â”œâ”€â”€ campaign-failed.html
â”‚   â”‚   â”œâ”€â”€ refund-request.html
â”‚   â”‚   â”œâ”€â”€ campaign-stuck.html
â”‚   â”‚   â”œâ”€â”€ geocoding-failures.html
â”‚   â”‚   â””â”€â”€ payment-issue.html
â”‚   â”œâ”€â”€ customer/
â”‚   â”‚   â”œâ”€â”€ payment-confirmation.html
â”‚   â”‚   â”œâ”€â”€ campaign-sent.html
â”‚   â”‚   â”œâ”€â”€ designs-ready.html
â”‚   â”‚   â”œâ”€â”€ campaign-delayed.html
â”‚   â”‚   â”œâ”€â”€ partial-refund.html
â”‚   â”‚   â””â”€â”€ delivery-complete.html
â”‚   â””â”€â”€ system/
â”‚       â””â”€â”€ critical-error.html
â”œâ”€â”€ components/
â”‚   â”œâ”€â”€ header.html
â”‚   â”œâ”€â”€ footer.html
â”‚   â””â”€â”€ button.html
â””â”€â”€ styles/
    â””â”€â”€ email-styles.css
```

## Priority Implementation Order:
1. âœ… Admin: Campaign Failed (URGENT) - **LIVE & TESTED**
2. âœ… Admin: Refund Request (HIGH) - **LIVE & TESTED**  
3. âœ… Customer: Payment Confirmation (HIGH) - **LIVE & INTEGRATED**
4. âœ… Admin: Campaign Stuck (MEDIUM) - **LIVE** (uses failed template)
5. ðŸ”„ Customer: Campaign Sent (MEDIUM) - **TODO**
6. ðŸ”„ Customer: Designs Ready (MEDIUM) - **TODO**
7. ðŸ”„ Remaining templates (LOW) - **TODO**

## Current Status: âœ… **CORE EMAIL SYSTEM OPERATIONAL**

### What's Working:
- âœ… SendGrid integration with API key
- âœ… HTML email templates with brand styling
- âœ… Template engine with variable substitution
- âœ… Email sending with fallback queuing
- âœ… Payment confirmation emails (auto-sent after checkout)
- âœ… Admin failure alerts (auto-sent on campaign errors)
- âœ… Admin refund requests (manual trigger needed)
- âœ… Test endpoint: `/api/v2/test-email`

### Integration Points:
- âœ… `checkout/page.tsx` - Sends payment confirmation
- âœ… `emailNotificationService.ts` - Sends admin alerts
- âœ… Firebase Functions - Can trigger admin alerts on failures
- ðŸ”„ Campaign processing - Need to wire up success/failure notifications
- ðŸ”„ Stannp webhooks - Need delivery confirmations

## SendGrid Implementation:
- Dynamic templates with variable substitution
- Branded HTML with mobile-responsive design
- Text fallbacks for all HTML emails
- Unsubscribe handling
- Bounce and spam monitoring
